{"version":3,"file":"static/js/797.2f4c24b2.chunk.js","mappings":"sNAoBMA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAXL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,kBAAMC,SAAUF,EAAhB,WACKG,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAACC,KAAM,cAC9DH,EAAAA,EAAAA,IAAY,GAAI,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAM,YAAa,eAC7DL,IAAS,gBAAKM,UAAWC,EAAAA,EAAAA,iBAAhB,SAA0CP,KACpD,0BAAK,8CAuBjB,WAAeQ,EAAAA,EAAAA,KAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEiB,CAACE,MAAAA,EAAAA,IAAzC,EAjBc,SAACC,GAKX,OAAIA,EAAMH,QACC,SAAC,KAAD,CAASI,GAAI,aAEjB,4BACH,mCACA,SAAClB,EAAD,CAAgBK,SATH,SAACc,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,sB,2NCnB1DC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAStB,EAAsB,EAAtBA,MAAQuB,EAAc,EAAdA,SAC3CC,EAAWF,GAAWtB,EAC5B,OACI,iBAAKM,UAAWC,EAAAA,EAAAA,YAAqB,KAAOiB,EAAWjB,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBACKgB,IAEJC,IAAY,0BAAOxB,QAKnByB,EAAW,SAACZ,GACrB,IAAOO,EAAoCP,EAApCO,MAAuBM,GAAab,EAA7BQ,KAA6BR,EAAvBc,OAApB,OAA2Cd,EAA3C,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,uCAAcO,GAAWM,QAG/CtB,EAAQ,SAACS,GAClB,IAAOO,EAAoCP,EAApCO,MAAuBM,GAAab,EAA7BQ,KAA6BR,EAAvBc,OAApB,OAA2Cd,EAA3C,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,oCAAWO,GAAWM,QAG5CxB,EAAc,SAAC0B,EAAaC,EAAMC,EAAYC,GAAhC,IAA2ClB,EAA3C,uDAAmD,GAAImB,EAAvD,uDAA8D,GAA9D,OAAsE,4BAC7F,SAAC,KAAD,QACIJ,YAAaA,EACbK,SAAUH,EACVD,KAAMA,EACNE,UAAWA,GACPlB,IANqF,IAOzFmB,O,4EClCD,IAAM7B,EAAW,SAAC+B,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCLlC,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://social_network/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(\"\", \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <NavLink to={'profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\",) => <div>\r\n    <Field\r\n        placeholder={placeholder}\r\n        validate={validators}\r\n        name={name}\r\n        component={component}\r\n        {...props}\r\n    /> {text}\r\n</div>","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__2DrIS\",\"error\":\"FormsControls_error__+IV3j\",\"formSummaryError\":\"FormsControls_formSummaryError__04LsR\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","type","className","styles","connect","state","isAuth","auth","login","props","to","formData","email","password","rememberMe","FormControl","input","meta","touched","children","hasError","Textarea","restProps","child","placeholder","name","validators","component","text","validate","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}