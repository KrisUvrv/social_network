{"version":3,"file":"static/js/266.52e6a8f7.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://social_network/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__qtV7w\",\"dialogItems\":\"Dialogs_dialogItems__S1M5E\",\"active\":\"Dialogs_active__YLNLj\",\"dialog\":\"Dialogs_dialog__mOGh4\",\"messages\":\"Dialogs_messages__D50ZR\",\"message\":\"Dialogs_message__I2i+r\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./Message/AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogs;\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <div>\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\",) => <div>\r\n    <Field\r\n        placeholder={placeholder}\r\n        validate={validators}\r\n        name={name}\r\n        component={component}\r\n        {...props}\r\n    /> {text}\r\n</div>","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__2DrIS\",\"error\":\"FormsControls_error__+IV3j\",\"formSummaryError\":\"FormsControls_formSummaryError__04LsR\"};"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogs","dialogElements","map","d","messagesElements","messages","m","newMessageBody","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","Input","createField","validators","text","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React","value","maxLength","length"],"sourceRoot":""}