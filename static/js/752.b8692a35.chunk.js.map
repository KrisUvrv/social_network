{"version":3,"file":"static/js/752.b8692a35.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social_network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://social_network/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Rj-hY\",\"userPhoto\":\"ProfileInfo_userPhoto__S8lKd\",\"contact\":\"ProfileInfo_contact__EBPLx\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n            setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save\r\n            </button>\r\n        </div>\r\n        {error && <div className={styles.formSummaryError}>{error}</div>}\r\n\r\n        <div>\r\n            <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My skills</b>: {createField(\"My skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit_profile\"})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user-png-default-user-image-png-png.png\";\r\nimport styles from \"../../Users/users.module.css\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={styles.userPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>)\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name:</b> {profile.fullName}\r\n        </div>\r\n        <div><b>About me: </b>{profile.aboutMe}</div>\r\n        <div>\r\n            <b>looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob && <div>\r\n            <b>My skills</b>: {profile.lookingForAJobDescription}\r\n        </div>}\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key}\r\n                            contactTitle={key}\r\n                            contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__rhrdO\",\"posts\":\"MyPosts_posts__twp+3\",\"item\":\"MyPosts_item__82YyO\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__WoijP\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://png.pngtree.com/png-clipart/20200701/original/pngtree-cat-default-avatar-png-image_5416936.jpg\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map( p => < Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.item}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.router.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    authorisedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\",) => <div>\r\n    <Field\r\n        placeholder={placeholder}\r\n        validate={validators}\r\n        name={name}\r\n        component={component}\r\n        {...props}\r\n    /> {text}\r\n</div>","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__2DrIS\",\"error\":\"FormsControls_error__+IV3j\",\"formSummaryError\":\"FormsControls_formSummaryError__04LsR\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","styles","createField","Input","Textarea","type","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","React","postsElements","posts","reverse","p","id","values","addPost","newPostText","connect","state","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","authorisedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","FormControl","input","meta","touched","children","hasError","restProps","child","validators","text","mapStateToPropsForRedirect","RedirectComponent","to","maxLength"],"sourceRoot":""}