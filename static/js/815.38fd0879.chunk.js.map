{"version":3,"file":"static/js/815.38fd0879.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social_network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://social_network/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Rj-hY\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n            setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <div><h3>Обо мне: </h3>{profile.aboutMe}</div>\r\n                <div><h3>Статус: </h3><ProfileStatusWithHooks status={status} updateStatus={updateStatus}/></div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__rhrdO\",\"posts\":\"MyPosts_posts__twp+3\",\"item\":\"MyPosts_item__82YyO\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__WoijP\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://png.pngtree.com/png-clipart/20200701/original/pngtree-cat-default-avatar-png-image_5416936.jpg\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map( p => < Post message={p.message} likesCount={p.likesCount}/>);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.item}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            // if (!userId) {\r\n            //     this.props.navigate(\"/login\")\r\n            // }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\",) => <div>\r\n    <Field\r\n        placeholder={placeholder}\r\n        validate={validators}\r\n        name={name}\r\n        component={component}\r\n        {...props}\r\n    /> {text}\r\n</div>","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__2DrIS\",\"error\":\"FormsControls_error__+IV3j\",\"formSummaryError\":\"FormsControls_formSummaryError__04LsR\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","className","s","src","photos","large","aboutMe","Preloader","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","React","postsElements","posts","reverse","map","p","values","addPost","newPostText","connect","state","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","authorisedUserId","getUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","Input","createField","validators","text","mapStateToPropsForRedirect","RedirectComponent","to","maxLength","length"],"sourceRoot":""}